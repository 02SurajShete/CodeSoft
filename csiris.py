# -*- coding: utf-8 -*-
"""CSIris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tN_rRHWXxwzuhc49HYTEUnNk-YwtFPoB
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

irirs = pd.read_csv('/content/sample_data/IRIS.csv')
irirs.head()

iris = pd.DataFrame(irirs)
# Display basic information about the dataset
print(iris.info())

# Display summary statistics
print(iris.describe())

# Visualize the distribution of features
sns.pairplot(iris, hue='species')
plt.show()

# Visualize the correlation between features
plt.figure(figsize=(10, 6))
sns.heatmap(iris.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

# Split the dataset into features (X) and target (y)
X = iris.drop('species', axis=1)
y = iris['species']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Standardize features by removing the mean and scaling to unit variance
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

# Train a k-nearest neighbors classifier
knn_classifier = KNeighborsClassifier(n_neighbors=5)
knn_classifier.fit(X_train_scaled, y_train)

# Make predictions on the testing set
y_pred = knn_classifier.predict(X_test_scaled)

# Evaluate the model
print('Classification Report:')
print(classification_report(y_test, y_pred))
print('Confusion Matrix:')
print(confusion_matrix(y_test, y_pred))